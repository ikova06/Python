# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и
# проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое
# имеет 2 делителя: 1 и n(само число)

# def simple(n,del1=2):
#     if n ==2 or del1*del1 > n:
#         return print('{} - простое число'.format(n))
#     elif n% del1 ==0:
#         return print('{} - составное число'.format(n))
#     return simple (n, del1+1)
# simple(6)


# Определить, является ли слово палиндромом

# def isP(s):
#     if len(s)<=1:
#         return True
#     elif s[0] == s[-1]:
#         return isP(s[1:-1])
#     else:
#         return False
# ss = input ("Введите слово: ")
# print(isP(ss))


# Задача №45. Общее обсуждение
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105. Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).


n = int(input("Введите число от 1 до 10000: "))
def sum(n):
    s = 0
    for k in range(1, n // 2 + 1):
        if n % k == 0:
            s += k
    return s

for i in range(1, 10000):
    j = sum(i)
    if i < j <= n and i == sum(j):
        print(i, j)
